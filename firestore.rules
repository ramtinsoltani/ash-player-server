rules_version = '2';

service cloud.firestore {

  match /databases/{database}/documents {

  	// Checks if user is authenticated with Email/Password and is registered under /users collection
    function isRegistered() {

      return
        request.auth != null &&
      	request.auth.uid != null &&
      	request.auth.token.firebase.sign_in_provider == 'password' &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid));

    }

    match /users/{uid} {

      allow get: if isRegistered();

    }

    match /contacts/{uid} {

    	allow get: if
        isRegistered() &&
        request.auth.uid == uid;

    }

    match /invitations/{id} {

    	allow read: if
        isRegistered() &&
        (request.auth.uid == resource.data.to || request.auth.uid == resource.data.from);

    }

    match /sessions/{id} {

      allow get: if
        isRegistered() &&
        // If document is deleted (seems to be a bug in Firestore emulator only)
        ( resource == null ||
        // If user is host
        resource.data.host == request.auth.uid ||
        // If user is a member and has status 'ready'
        (resource.data.members.keys().hasAny([request.auth.uid]) &&
        resource.data.members[request.auth.uid].status == 'ready'));

    }

  }

}
